
/*
IN THIS PROJECT WE USE PIR SENSOR.   PIR SENSOR DOES NOT ACTIVELY TAKE
PART IN THE PROCESS, IT DOES NOT EMIT IR SIGNALS ITSELF, RATHER PASSIVELY
DETECTS THE INFRARED RADIATIONS. PIR SENSOR WORKS LIKE
WHENEVER IT DETECTS MOTION, IT MAKES DATA PIN HIGH AND 
AFTER SOME TIME IT MAKES DATA PIN LOW. 
SO WE READ DATA PIN THEN WE GENERATE PWM SIGNAL FOR BUZZER

IF WE READ ANY MOVEMENT THEN BUZZER'LL BE ON. AFTER THAT 
PROCESSOR CHECK THE READ PIN AND IF IT GOES TO LOW
THEN BUZZER'LL BE OFF.
IN THIS PROJECT I USED CUBEMX AND KEIL UVISION.
I USED STM32F103C8T6 (BLUE PILL) STM DEVICE. 



*/
#include "main.h"

TIM_HandleTypeDef htim2;

void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_TIM2_Init(void);
// BUZZER FUNCTION %90 PWM DUTY
void Buzzer_on(void)
{
htim2.Instance->CCR1 = 90;
}

void Buzzer_off(void)
{
htim2.Instance->CCR1 =0;
}

int main(void)
{
 
	HAL_Init();

  /* Configure the system clock */
  SystemClock_Config();


  /* Initialize 
